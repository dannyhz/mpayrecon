--call MPOS.SP_PROFIT_CLEAR(0,'20161030',?)
--DROP PROCEDURE "MPOS"."SP_PROFIT_CLEAR";
CREATE OR REPLACE PROCEDURE "MPOS"."SP_PROFIT_CLEAR" (
    IN "I_BATID"	DEC(20),
    IN "I_CKDT"	CHAR(8),	--必输，对CKDT对账日期的数据计算分润，对某日计算时，I_BATID可不输
--    IN "I_CHLNO"	VARCHAR(50),	--05 微信二清，10 支付宝二清，20 百付宝
    OUT "O_ERRMSG"	VARCHAR(128)
)
LANGUAGE SQL
BEGIN 
/*=====================================================================+           
  功能描述：移动收单分润计算
  注意：日间修改商户费率或者主商户费率等会影响分润分配规则的动作，会造成分润计算出现误差，暂不考虑            
  编写人员：phio
  设计日期：2016/10/25
  修改历史：
  修改日期  修改人员   修改原因
  
-----------------------------------------------------------------------*/

--------------------------常用变量定义--------------------------
DECLARE IRET INTEGER DEFAULT 0 ;
--定义SQL异常警告信息捕捉变量
DECLARE SQLCODE INT DEFAULT 0 ;		        --SQL返回代码
DECLARE SQLSTATE CHAR(5) DEFAULT '00000' ;--SQL默认返回代码'00000'，返回成功
--------------------------应用变量定义---------------------------
DECLARE V_CKDT DATE;
----------------------------------异常日志处理-------------------------
--SQL产生的非上述异常的处理
DECLARE EXIT HANDLER FOR SQLEXCEPTION 
BEGIN
	SET O_ERRMSG = O_ERRMSG ||',SQLCODE='||TRIM(CHAR(SQLCODE))||',SQLSTATE='||SQLSTATE;	
	--ROLLBACK ;
END;

SET O_ERRMSG = '-1';
SET V_CKDT = TO_DATE(I_CKDT,'YYYYMMDD');

SET O_ERRMSG = '-2';
--检查分润配置表的数据完整性,只要总和是相等的，就不必考虑MAIN_MCHT_NO、SUB_ZX_MCHT_NO、AGNT_BRH_ID的唯一性
--重新跑历史，如果有商户费率变动，这一步有可能过不了
IF EXISTS (
	SELECT A.*,B.MAIN_COST_RATE,C.FEE_RATE FROM
		(SELECT MAIN_MCHT_NO,SUB_ZX_MCHT_NO,SUM(PROFIT_RATE) SUMRT FROM IMP_SECD_PROFIT_RATE_HIS WHERE SNAPDT=I_CKDT AND STCD='0' GROUP BY MAIN_MCHT_NO,SUB_ZX_MCHT_NO) A
		LEFT JOIN IMP_MAIN_MCHT_INFO B ON A.MAIN_MCHT_NO=B.MAIN_MCHT_NO --主商户表获取成本费率
		LEFT JOIN (
	      SELECT SUB_ZX_MCHT_NO,MAIN_MCHT_NO,FEE_RATE FROM IMP_SECD_FEE_INFO
	      UNION ALL
	      SELECT SUB_ZX_MCHT_NO,MAIN_MCHT_NO,TO_CHAR(FEE_RATE) FROM IMP_PLAT_FEE_INFO
	    ) C ON A.MAIN_MCHT_NO=C.MAIN_MCHT_NO AND A.SUB_ZX_MCHT_NO=C.SUB_ZX_MCHT_NO --二级商户表费表获取总收入
	WHERE (C.FEE_RATE-B.MAIN_COST_RATE)/100 - A.SUMRT <> 0		OR		(C.FEE_RATE-B.MAIN_COST_RATE) IS NULL
) THEN
	RETURN;
END IF;

--计算各机构分润（普通商户，FZFG=N）
SET O_ERRMSG = '-4';
INSERT INTO MPOS.BAT2_AGT_PROFIT(BATID,CALDT,MCH_NO,MY_SEC_MCH_NO,AGNT_BRH_ID,AGNT_BRH_NAME,PROFIT_RATE,PROFIT_FEE,CNT,TRAM,COST,TOTAL_FEE,MY_PTMCH_FEE)
	SELECT A.BATID,I_CKDT,A.MCH_NO,A.MY_SEC_MCH_NO,
		VALUE(B.AGNT_BRH_ID,''),VALUE(B.AGNT_BRH_NAME,''),VALUE(B.PROFIT_RATE,'0'),VALUE(CAST(ROUND(A.TRAM*B.PROFIT_RATE,2) AS DEC(15,2)),0),
		A.CNT,A.TRAM,A.COST,A.TOTAL_FEE,0 FROM 
		(SELECT BATID,MCH_NO,MY_SEC_MCH_NO ,SUM(TRAM) AS TRAM,COUNT(1) AS CNT,SUM(COST) COST,SUM(TOTAL_FEE) TOTAL_FEE FROM BAT2_CMP_RESULT WHERE CKDT=V_CKDT AND (I_BATID=0 OR BATID=I_BATID) AND FZFG='N' GROUP BY BATID,MCH_NO,MY_SEC_MCH_NO) A LEFT JOIN 
		(SELECT * FROM IMP_SECD_PROFIT_RATE_HIS WHERE SNAPDT=I_CKDT AND STCD='0') B ON A.MY_SEC_MCH_NO=B.SUB_ZX_MCHT_NO AND A.MCH_NO=B.MAIN_MCHT_NO;

--计算各机构分润（平台商户，FZFG=Y、D）
--分账/独立模式下，待分配利润算到平台商户这一层，平台商户和分账子商户之间的利差在每日入账时就已经入掉了
SET O_ERRMSG = '-5';
INSERT INTO MPOS.BAT2_AGT_PROFIT(BATID,CALDT,MCH_NO,MY_SEC_MCH_NO,AGNT_BRH_ID,AGNT_BRH_NAME,PROFIT_RATE,PROFIT_FEE,CNT,TRAM,COST,TOTAL_FEE,MY_PTMCH_FEE)
	SELECT A.BATID,I_CKDT,A.MCH_NO,A.MY_MCH_NO,
		VALUE(B.AGNT_BRH_ID,''),VALUE(B.AGNT_BRH_NAME,''),VALUE(B.PROFIT_RATE,'0'),VALUE(CAST(ROUND(A.TRAM*B.PROFIT_RATE,2) AS DEC(15,2)),0),
		A.CNT,A.TRAM,A.COST,A.TOTAL_FEE,A.MY_PTMCH_FEE FROM 
		(SELECT BATID,MCH_NO,MY_MCH_NO ,SUM(TRAM) AS TRAM,COUNT(1) AS CNT,SUM(COST) COST,SUM(TOTAL_FEE) TOTAL_FEE,
			SUM(MY_PTMCH_FEE) MY_PTMCH_FEE FROM BAT2_CMP_RESULT WHERE CKDT=V_CKDT AND (I_BATID=0 OR BATID=I_BATID) AND FZFG IN ('Y','D') GROUP BY BATID,MCH_NO,MY_MCH_NO) A LEFT JOIN 
		(SELECT * FROM IMP_SECD_PROFIT_RATE_HIS WHERE SNAPDT=I_CKDT AND STCD='0') B ON A.MY_MCH_NO=B.SUB_ZX_MCHT_NO AND A.MCH_NO=B.MAIN_MCHT_NO;
		
COMMIT;
SET O_ERRMSG = '0';

END;
