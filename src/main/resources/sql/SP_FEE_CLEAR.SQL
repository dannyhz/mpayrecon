--call MPOS.SP_FEE_CLEAR(0,'2016-11-29','05',?)
--DROP PROCEDURE "MPOS"."SP_FEE_CLEAR";
--CREATE PROCEDURE "MPOS"."SP_FEE_CLEAR" (
CREATE OR REPLACE PROCEDURE "MPOS"."SP_FEE_CLEAR" (
    IN "I_BATID"	DEC(20),
    IN "I_CKDT"	CHAR(10),	--必输，YYYY-MM-DD 
    IN "I_CHLNO"	VARCHAR(50),	--05 微信二清，10 支付宝二清，20 百付宝
    OUT "O_ERRMSG"	VARCHAR(128)
)
LANGUAGE SQL
BEGIN 
/*=====================================================================+           
  功能描述：移动收单手续费清算
            
  编写人员：phio
  设计日期：2016/08/25
  修改历史：
  修改日期    修改人员    修改原因
 2017/06/09  LINYQ     结算黑名单表更改 IMP_MCHT_BLACKLIST
 2017/04/25  LINYQ     多机构项目修改：只汇总中信银行数据
-----------------------------------------------------------------------*/

--------------------------常用变量定义--------------------------
DECLARE IRET INTEGER DEFAULT 0 ;
--定义SQL异常警告信息捕捉变量
DECLARE SQLCODE INT DEFAULT 0 ;		        --SQL返回代码
DECLARE SQLSTATE CHAR(5) DEFAULT '00000' ;--SQL默认返回代码'00000'，返回成功
--------------------------应用变量定义---------------------------
DECLARE V_SMDT CHAR(8);
DECLARE V_BATID DEC(20);
DECLARE V_CKDT DATE;
DECLARE V_CHLNO0010 VARCHAR(50);	--00=微信，10=支付宝
DECLARE V_BANK_CODE VARCHAR(32);  	--中信银行编号
----------------------------------异常日志处理-------------------------
--SQL产生的非上述异常的处理
DECLARE EXIT HANDLER FOR SQLEXCEPTION 
BEGIN
	SET O_ERRMSG = O_ERRMSG ||',SQLCODE='||TRIM(CHAR(SQLCODE))||',SQLSTATE='||SQLSTATE;	
	--ROLLBACK ;
END;

SET V_BANK_CODE = '302331033102'; --中信银行编号

SET O_ERRMSG = '-1';
--确定日期\对账批次号
SET V_SMDT=TO_CHAR(CURRENT DATE,'YYYYMMDD');
SET V_CKDT = TO_DATE(I_CKDT,'YYYY-MM-DD');
IF I_BATID=0 THEN
	SELECT MAX(BATID) INTO V_BATID FROM MPOS.BAT2_CMP_RESULT WHERE CHANNEL_NO=I_CHLNO AND CKDT=V_CKDT AND BANK_CODE = V_BANK_CODE;
	IF V_BATID IS NULL THEN
		RETURN;
	END IF;	
ELSE
	SET V_BATID=I_BATID;
END IF;

SET O_ERRMSG = '-2';
--将05翻译成00，针对IMP_SECD_FEE_INFO表
IF I_CHLNO='05' THEN
	SET V_CHLNO0010='00';
ELSE
	SET V_CHLNO0010=I_CHLNO;	
END IF;

SET O_ERRMSG = '-3';
--检查二级商户表的唯一性
IF EXISTS (SELECT SUB_ZX_MCHT_NO,COUNT(1) FROM IMP_SECD_SUB_INFO WHERE SUB_ZX_MCHT_NO<>'' GROUP BY SUB_ZX_MCHT_NO HAVING COUNT(1)>1) THEN
	RETURN;
END IF;
SET O_ERRMSG = '-4';
--检查二级商户结算周期的唯一性
IF EXISTS (SELECT SUB_ZX_MCHT_NO,COUNT(DISTINCT SETTLE_CYCLE) FROM IMP_SECD_FEE_INFO WHERE SUB_ZX_MCHT_NO<>'' AND CHANNEL_NO=V_CHLNO0010 GROUP BY SUB_ZX_MCHT_NO HAVING COUNT(DISTINCT SETTLE_CYCLE)>1) THEN
	RETURN;
END IF;
SET O_ERRMSG = '-5';
--检查分账子商户的唯一性
IF EXISTS (SELECT SEC_MER_ID,COUNT(1) FROM IMP_SPLIT_SUB_MCHT GROUP BY SEC_MER_ID HAVING COUNT(1)>1) THEN
	RETURN;
END IF;
SET O_ERRMSG = '-6';
--检查入账金额的合理性
IF EXISTS (SELECT 1 FROM BAT2_CMP_RESULT WHERE CKDT=V_CKDT AND BATID=V_BATID AND RZAMT>TRAM AND RZAMT>0 AND BANK_CODE = V_BANK_CODE) THEN
	RETURN;
END IF;
SET O_ERRMSG = '-7';
--检查独立商户的唯一性
IF EXISTS (SELECT SUB_ZX_MCHT_NO,COUNT(1) FROM IMP_ALONE_SUB_INFO GROUP BY SUB_ZX_MCHT_NO HAVING COUNT(1)>1) THEN
	RETURN;
END IF;
SET O_ERRMSG = '-8';
--检查独立商户结算周期的唯一性
IF EXISTS (SELECT SUB_ZX_MCHT_NO,COUNT(DISTINCT SETTLE_CYCLE) FROM IMP_ALONE_CHANNEL_INFO WHERE CHANNEL_NO=V_CHLNO0010 GROUP BY SUB_ZX_MCHT_NO HAVING COUNT(DISTINCT SETTLE_CYCLE)>1) THEN
	RETURN;
END IF;

SET O_ERRMSG = '-9';
--汇总普通商户入账金额 RZTP=1
INSERT INTO MPOS.BAT2_MCH_FEE_CLEAR(BATID,SMDT,MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO,TCNT,TTRAM,ACNT,ATRAM,RCNT,RTRAM,COST,TOTAL_FEE,RZAMT,
			SEC_MCH_NM,
			SETTLE_BANK_FLAG,SETTLE_ACCT,SETTLE_ACCT_NM,SETTLE_BANK_ALL_NAME,SETTLE_BANK_CODE,SETTLE_CYCLE,RZTP
			)
	SELECT A.*,
			B.MCHT_NM,
			B.SETTLE_BANK_FLAG,B.SETTLE_ACCT,B.SETTLE_ACCT_NM,B.SETTLE_BANK_ALL_NAME,B.SETTLE_BANK_CODE,C.SETTLE_CYCLE,1  FROM (
		SELECT V_BATID,V_SMDT, MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO, 
			COUNT(1), --总笔数
			SUM(TRAM), --轧差金额
	    SUM(CASE WHEN TRTP = '01' THEN 1 ELSE 0 END),	--正交易笔数
	    SUM(CASE WHEN TRTP = '01' THEN TRAM ELSE 0 END), --正交易总金额
			SUM(CASE WHEN TRTP IN ('04','21') THEN 1 ELSE 0 END), --反交易笔数
	    SUM(CASE WHEN TRTP IN ('04','21') THEN TRAM ELSE 0 END), --反交易总金额
	    SUM(COST),	--渠道成本
	    SUM(TOTAL_FEE),	--总手续费
	    SUM(RZAMT)	--商户入账金额
		FROM BAT2_CMP_RESULT
		WHERE CKDT=V_CKDT AND BATID=V_BATID AND CKFG=0 AND FZFG='N' AND BANK_CODE = V_BANK_CODE --中信银行数据
		GROUP BY MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO) AS A	--我方一级商户号(对应渠道二级商户号),我方二级商户号，渠道类型
		LEFT JOIN IMP_SECD_SUB_INFO B ON A.MY_SEC_MCH_NO=B.SUB_ZX_MCHT_NO
		LEFT JOIN (SELECT DISTINCT SUB_ZX_MCHT_NO,SETTLE_CYCLE FROM IMP_SECD_FEE_INFO WHERE SUB_ZX_MCHT_NO<>'' AND CHANNEL_NO=V_CHLNO0010 ) C 
			ON A.MY_SEC_MCH_NO=C.SUB_ZX_MCHT_NO;

SET O_ERRMSG = '-10';
--汇总分账子商户入账金额 RZTP=2
INSERT INTO MPOS.BAT2_MCH_FEE_CLEAR(BATID,SMDT,MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO,TCNT,TTRAM,ACNT,ATRAM,RCNT,RTRAM,COST,TOTAL_FEE,RZAMT,
			SEC_MCH_NM,
			SETTLE_BANK_FLAG,SETTLE_ACCT,SETTLE_ACCT_NM,SETTLE_BANK_ALL_NAME,SETTLE_BANK_CODE,SETTLE_CYCLE,RZTP
			)
	SELECT A.*,
			B.MCHT_NM,
			B.IS_OR_NOT_ZX_MCHT_NO,B.SETTLE_ACCT,B.SETTLE_ACCT_NM,B.SETTLE_BANK_ALL_NAME,B.SETTLE_BANK_CODE,C.SETTLE_CYCLE,2  FROM (
		SELECT V_BATID,V_SMDT, MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO, 
			COUNT(1), --总笔数
			SUM(TRAM), --轧差金额
	    SUM(CASE WHEN TRTP = '01' THEN 1 ELSE 0 END),	--正交易笔数
	    SUM(CASE WHEN TRTP = '01' THEN TRAM ELSE 0 END), --正交易总金额
			SUM(CASE WHEN TRTP IN ('04','21') THEN 1 ELSE 0 END), --反交易笔数
	    SUM(CASE WHEN TRTP IN ('04','21') THEN TRAM ELSE 0 END), --反交易总金额
	    SUM(COST),	--渠道成本,没有用处
	    SUM(TOTAL_FEE),	--总手续费,没有用处
	    SUM(RZAMT)	--商户入账金额
		FROM BAT2_CMP_RESULT
		WHERE CKDT=V_CKDT AND BATID=V_BATID AND CKFG=0 AND FZFG = 'Y' AND D0FG IN ('1','X') AND BANK_CODE = V_BANK_CODE --分账模式下非D0和D0余额不足的
		GROUP BY MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO) AS A	--我方一级商户号(分账模式下即为平台商户),渠道类型
		LEFT JOIN IMP_SPLIT_SUB_MCHT B ON A.MY_SEC_MCH_NO=B.SEC_MER_ID
		LEFT JOIN (SELECT DISTINCT SUB_ZX_MCHT_NO,SETTLE_CYCLE FROM IMP_SECD_FEE_INFO WHERE SUB_ZX_MCHT_NO<>'' AND CHANNEL_NO=V_CHLNO0010 ) C
			ON A.MY_MCH_NO=C.SUB_ZX_MCHT_NO;	--通过交易流水中的平台商户号获取平台商户的结算周期

SET O_ERRMSG = '-11';
--日间成功D0/分账子商户D0超时/异常入平台商户垫支账户 RZTP=3 （垫支户只能是本行账户,且只能是D1）
INSERT INTO MPOS.BAT2_MCH_FEE_CLEAR(BATID,SMDT,MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO,TCNT,TTRAM,ACNT,ATRAM,RCNT,RTRAM,COST,TOTAL_FEE,RZAMT,
			SEC_MCH_NM,
			SETTLE_BANK_FLAG,SETTLE_ACCT,SETTLE_ACCT_NM,SETTLE_BANK_ALL_NAME,SETTLE_BANK_CODE,SETTLE_CYCLE,RZTP
			)
	SELECT A.*,
			B.MCHT_NM,
			'Y',B.ADVANCE_PAY_ACCT,B.ADVANCE_PAY_ACCT_NM,'','','2',3  FROM (	--垫支户只能是本行账户,且只能是D1
		SELECT V_BATID,V_SMDT, MY_MCH_NO,MY_MCH_NO AS MY_SEC_MCH_NO,CHANNEL_NO, 
			COUNT(1), --总笔数
			SUM(TRAM), --轧差金额
	    SUM(CASE WHEN TRTP = '01' THEN 1 ELSE 0 END),	--正交易笔数
	    SUM(CASE WHEN TRTP = '01' THEN TRAM ELSE 0 END), --正交易总金额
			SUM(CASE WHEN TRTP IN ('04','21') THEN 1 ELSE 0 END), --反交易笔数
	    SUM(CASE WHEN TRTP IN ('04','21') THEN TRAM ELSE 0 END), --反交易总金额
	    SUM(COST),	--渠道成本
	    SUM(TOTAL_FEE),	--总手续费
	    SUM(RZAMT)	--入账金额为分账子商户交易汇总
		FROM BAT2_CMP_RESULT
		WHERE CKDT=V_CKDT AND BATID=V_BATID AND CKFG=0 AND FZFG = 'Y' AND D0FG IN ('0','2','3','4') AND BANK_CODE = V_BANK_CODE --日间已清算的、非余额不足的错误和超时的，统一入平台商户账
		GROUP BY MY_MCH_NO,CHANNEL_NO) AS A	--我方一级商户号(分账模式下即为平台商户),渠道类型
		LEFT JOIN IMP_SECD_SUB_INFO B ON A.MY_MCH_NO=B.SUB_ZX_MCHT_NO
		LEFT JOIN (SELECT DISTINCT SUB_ZX_MCHT_NO,SETTLE_CYCLE FROM IMP_SECD_FEE_INFO WHERE SUB_ZX_MCHT_NO<>'' AND CHANNEL_NO=V_CHLNO0010 ) C
			ON A.MY_MCH_NO=C.SUB_ZX_MCHT_NO;	--通过交易流水中的平台商户号获取平台商户的结算周期
			
SET O_ERRMSG = '-12';
--汇总平台商户利差金额 RZTP=4
INSERT INTO MPOS.BAT2_MCH_FEE_CLEAR(BATID,SMDT,MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO,TCNT,TTRAM,ACNT,ATRAM,RCNT,RTRAM,COST,TOTAL_FEE,RZAMT,
			SEC_MCH_NM,
			SETTLE_BANK_FLAG,SETTLE_ACCT,SETTLE_ACCT_NM,SETTLE_BANK_ALL_NAME,SETTLE_BANK_CODE,SETTLE_CYCLE,RZTP
			)
	SELECT A.*,
			B.MCHT_NM,
			B.SETTLE_BANK_FLAG,B.SETTLE_ACCT,B.SETTLE_ACCT_NM,B.SETTLE_BANK_ALL_NAME,B.SETTLE_BANK_CODE,C.SETTLE_CYCLE,4  FROM (
		SELECT V_BATID,V_SMDT, MY_MCH_NO,MY_MCH_NO AS MY_SEC_MCH_NO,CHANNEL_NO, 
			COUNT(1), --总笔数
			SUM(TRAM), --轧差金额
	    SUM(CASE WHEN TRTP = '01' THEN 1 ELSE 0 END),	--正交易笔数
	    SUM(CASE WHEN TRTP = '01' THEN TRAM ELSE 0 END), --正交易总金额
			SUM(CASE WHEN TRTP IN ('04','21') THEN 1 ELSE 0 END), --反交易笔数
	    SUM(CASE WHEN TRTP IN ('04','21') THEN TRAM ELSE 0 END), --反交易总金额
	    SUM(COST),	--渠道成本,没有用处
	    SUM(TOTAL_FEE),	--总手续费,没有用处
	    SUM(MY_PTMCH_FEE)	--平台商户入账金额
		FROM BAT2_CMP_RESULT
		WHERE CKDT=V_CKDT AND BATID=V_BATID AND CKFG=0 AND FZFG = 'Y' AND BANK_CODE = V_BANK_CODE 
		GROUP BY MY_MCH_NO,CHANNEL_NO) AS A	--我方一级商户号(分账模式下即为平台商户),渠道类型
		LEFT JOIN IMP_SECD_SUB_INFO B ON A.MY_MCH_NO=B.SUB_ZX_MCHT_NO
		LEFT JOIN (SELECT DISTINCT SUB_ZX_MCHT_NO,SETTLE_CYCLE FROM IMP_SECD_FEE_INFO WHERE SUB_ZX_MCHT_NO<>'' AND CHANNEL_NO=V_CHLNO0010 ) C 
			ON A.MY_MCH_NO=C.SUB_ZX_MCHT_NO;

SET O_ERRMSG = '-13';
--汇总独立商户入账金额 RZTP=2(与分账一致,通过商户号规则可以区分)
INSERT INTO MPOS.BAT2_MCH_FEE_CLEAR(BATID,SMDT,MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO,TCNT,TTRAM,ACNT,ATRAM,RCNT,RTRAM,COST,TOTAL_FEE,RZAMT,
			SEC_MCH_NM,
			SETTLE_BANK_FLAG,SETTLE_ACCT,SETTLE_ACCT_NM,SETTLE_BANK_ALL_NAME,SETTLE_BANK_CODE,SETTLE_CYCLE,RZTP
			)
	SELECT A.*,
			B.MCHT_NM,
			B.ZX_FLAG,B.SETTLE_ACCT,B.SETTLE_ACCT_NM,B.SETTLE_BANK_ALL_NAME,B.SETTLE_BANK_CODE,C.SETTLE_CYCLE,2  FROM (
		SELECT V_BATID,V_SMDT, MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO, 
			COUNT(1), --总笔数
			SUM(TRAM), --轧差金额
	    SUM(CASE WHEN TRTP = '01' THEN 1 ELSE 0 END),	--正交易笔数
	    SUM(CASE WHEN TRTP = '01' THEN TRAM ELSE 0 END), --正交易总金额
			SUM(CASE WHEN TRTP IN ('04','21') THEN 1 ELSE 0 END), --反交易笔数
	    SUM(CASE WHEN TRTP IN ('04','21') THEN TRAM ELSE 0 END), --反交易总金额
	    SUM(COST),	--渠道成本,没有用处
	    SUM(TOTAL_FEE),	--总手续费,没有用处
	    SUM(RZAMT)	--商户入账金额
		FROM BAT2_CMP_RESULT
		WHERE CKDT=V_CKDT AND BATID=V_BATID AND CKFG=0 AND FZFG = 'D' AND D0FG IN ('1','X') AND BANK_CODE = V_BANK_CODE --独立模式下非D0和D0余额不足的
		GROUP BY MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO) AS A	--我方一级商户号(独立模式下即为平台商户),渠道类型
		LEFT JOIN IMP_ALONE_SUB_INFO B ON A.MY_SEC_MCH_NO=B.SUB_ZX_MCHT_NO
		LEFT JOIN (SELECT DISTINCT SUB_ZX_MCHT_NO,SETTLE_CYCLE FROM IMP_ALONE_CHANNEL_INFO WHERE CHANNEL_NO=V_CHLNO0010 ) C
			ON A.MY_SEC_MCH_NO=C.SUB_ZX_MCHT_NO;	--独立商户的结算周期使用自己的

SET O_ERRMSG = '-14';
--独立模式日间成功D0/D0超时/异常入平台商户垫支账户 RZTP=3 （垫支户只能是本行账户,且只能是D1）
INSERT INTO MPOS.BAT2_MCH_FEE_CLEAR(BATID,SMDT,MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO,TCNT,TTRAM,ACNT,ATRAM,RCNT,RTRAM,COST,TOTAL_FEE,RZAMT,
			SEC_MCH_NM,
			SETTLE_BANK_FLAG,SETTLE_ACCT,SETTLE_ACCT_NM,SETTLE_BANK_ALL_NAME,SETTLE_BANK_CODE,SETTLE_CYCLE,RZTP
			)
	SELECT A.*,
			B.MCHT_NM,
			'Y',B.ADVANCE_PAY_ACCT,B.ADVANCE_PAY_ACCT_NAME,'','','2',3  FROM (	--垫支户只能是本行账户,且只能是D1
		SELECT V_BATID,V_SMDT, MY_MCH_NO,MY_MCH_NO AS MY_SEC_MCH_NO,CHANNEL_NO, 
			COUNT(1), --总笔数
			SUM(TRAM), --轧差金额
	    SUM(CASE WHEN TRTP = '01' THEN 1 ELSE 0 END),	--正交易笔数
	    SUM(CASE WHEN TRTP = '01' THEN TRAM ELSE 0 END), --正交易总金额
			SUM(CASE WHEN TRTP IN ('04','21') THEN 1 ELSE 0 END), --反交易笔数
	    SUM(CASE WHEN TRTP IN ('04','21') THEN TRAM ELSE 0 END), --反交易总金额
	    SUM(COST),	--渠道成本
	    SUM(TOTAL_FEE),	--总手续费
	    SUM(RZAMT)	--入账金额为分账子商户交易汇总
		FROM BAT2_CMP_RESULT
		WHERE CKDT=V_CKDT AND BATID=V_BATID AND CKFG=0 AND FZFG = 'D' AND D0FG IN ('0','2','3','4') AND BANK_CODE = V_BANK_CODE --日间已清算的、非余额不足的错误和超时的，统一入平台商户账
		GROUP BY MY_MCH_NO,CHANNEL_NO) AS A	--我方一级商户号(独立模式下即为平台商户),渠道类型
		LEFT JOIN IMP_ALONE_SUB_INFO B ON A.MY_MCH_NO=B.SUB_ZX_MCHT_NO	--获取平台商户信息
		LEFT JOIN (SELECT DISTINCT SUB_ZX_MCHT_NO,SETTLE_CYCLE FROM IMP_ALONE_CHANNEL_INFO WHERE CHANNEL_NO=V_CHLNO0010 ) C
			ON A.MY_MCH_NO=C.SUB_ZX_MCHT_NO;	--通过交易流水中的平台商户号获取平台商户的结算周期
			
SET O_ERRMSG = '-15';
--汇总独立模式平台商户利差金额 RZTP=4(与分账一致,通过商户号规则可以区分)
INSERT INTO MPOS.BAT2_MCH_FEE_CLEAR(BATID,SMDT,MY_MCH_NO,MY_SEC_MCH_NO,CHANNEL_NO,TCNT,TTRAM,ACNT,ATRAM,RCNT,RTRAM,COST,TOTAL_FEE,RZAMT,
			SEC_MCH_NM,
			SETTLE_BANK_FLAG,SETTLE_ACCT,SETTLE_ACCT_NM,SETTLE_BANK_ALL_NAME,SETTLE_BANK_CODE,SETTLE_CYCLE,RZTP
			)
	SELECT A.*,
			B.MCHT_NM,
			B.ZX_FLAG,B.SETTLE_ACCT,B.SETTLE_ACCT_NM,B.SETTLE_BANK_ALL_NAME,B.SETTLE_BANK_CODE,'2',4  FROM (	--新平台商户结算周期固定D1(2)
		SELECT V_BATID,V_SMDT, MY_MCH_NO,MY_MCH_NO AS MY_SEC_MCH_NO,CHANNEL_NO, 
			COUNT(1), --总笔数
			SUM(TRAM), --轧差金额
	    SUM(CASE WHEN TRTP = '01' THEN 1 ELSE 0 END),	--正交易笔数
	    SUM(CASE WHEN TRTP = '01' THEN TRAM ELSE 0 END), --正交易总金额
			SUM(CASE WHEN TRTP IN ('04','21') THEN 1 ELSE 0 END), --反交易笔数
	    SUM(CASE WHEN TRTP IN ('04','21') THEN TRAM ELSE 0 END), --反交易总金额
	    SUM(COST),	--渠道成本,没有用处
	    SUM(TOTAL_FEE),	--总手续费,没有用处
	    SUM(MY_PTMCH_FEE)	--平台商户入账金额
		FROM BAT2_CMP_RESULT
		WHERE CKDT=V_CKDT AND BATID=V_BATID AND CKFG=0 AND FZFG = 'D' AND BANK_CODE = V_BANK_CODE 
		GROUP BY MY_MCH_NO,CHANNEL_NO) AS A	--我方一级商户号(独立模式下即为平台商户),渠道类型
		LEFT JOIN IMP_ALONE_SUB_INFO B ON A.MY_MCH_NO=B.SUB_ZX_MCHT_NO;	--获取平台商户信息

			
SET O_ERRMSG = '-16';
--汇总终端手续费（比商户汇总再多一级TERM_NO汇总）
INSERT INTO MPOS.BAT2_TERM_FEE_CLEAR(BATID,SMDT,MY_MCH_NO,MY_SEC_MCH_NO,TERM_NO,CHANNEL_NO,TCNT,TTRAM,ACNT,ATRAM,RCNT,RTRAM,COST,TOTAL_FEE,RZAMT,
			SEC_MCH_NM,
			SETTLE_BANK_FLAG,SETTLE_ACCT,SETTLE_ACCT_NM,SETTLE_BANK_ALL_NAME,SETTLE_BANK_CODE
			)
	SELECT A.*,
			B.MCHT_NM,
			B.SETTLE_BANK_FLAG,B.SETTLE_ACCT,B.SETTLE_ACCT_NM,B.SETTLE_BANK_ALL_NAME,B.SETTLE_BANK_CODE  FROM (
		SELECT V_BATID,V_SMDT, MY_MCH_NO,MY_SEC_MCH_NO,TERM_NO,CHANNEL_NO, 
			COUNT(1), --总笔数
			SUM(TRAM), --轧差金额
	    SUM(CASE WHEN TRTP = '01' THEN 1 ELSE 0 END),	--正交易笔数
	    SUM(CASE WHEN TRTP = '01' THEN TRAM ELSE 0 END), --正交易总金额
			SUM(CASE WHEN TRTP IN ('04','21') THEN 1 ELSE 0 END), --反交易笔数
	    SUM(CASE WHEN TRTP IN ('04','21') THEN TRAM ELSE 0 END), --反交易总金额
	    SUM(COST),	--渠道成本
	    SUM(TOTAL_FEE),	--总手续费
	    SUM(RZAMT)	--商户入账金额
		FROM BAT2_CMP_RESULT
		WHERE CKDT=V_CKDT AND BATID=V_BATID AND CKFG=0 AND BANK_CODE = V_BANK_CODE 
		GROUP BY MY_MCH_NO,MY_SEC_MCH_NO,TERM_NO,CHANNEL_NO) AS A	--我方一级商户号(对应渠道二级商户号),我方二级商户号，终端号,渠道类型
		LEFT JOIN IMP_SECD_SUB_INFO B ON A.MY_SEC_MCH_NO=B.SUB_ZX_MCHT_NO;

SET O_ERRMSG = '-17';
--保险起见，屏蔽他行清算中支付联行行为空的记录(分账子账户信息不完整)
UPDATE MPOS.BAT2_MCH_FEE_CLEAR SET RZST=9 WHERE BATID=V_BATID AND SETTLE_BANK_FLAG='N' AND (SETTLE_BANK_CODE IS NULL OR SETTLE_BANK_CODE='' OR LENGTH(SETTLE_BANK_CODE)<>12);

SET O_ERRMSG = '-18';
--结算黑名单处理，暂时将 RZST 改为8，之后可通过手工出账 LINYQ 20170609
--普通商户、独立子商户处理 对应 MY_SEC_MCH_NO
UPDATE MPOS.BAT2_MCH_FEE_CLEAR
SET RZST = 8 
WHERE BATID = V_BATID 
	AND (MY_SEC_MCH_NO, CHANNEL_NO) IN (SELECT MCH_NO, CHANNEL_NO FROM IMP_MCHT_BLACKLIST WHERE BLACK_TP = 'C' AND RECORD_ST = 1);

SET O_ERRMSG = '-19';
--平台商户处理 对应 MY_MCH_NO, 已 RZST=8 的不再处理，如上步已处理的普通商户
UPDATE MPOS.BAT2_MCH_FEE_CLEAR
SET RZST = 8 
WHERE BATID = V_BATID AND RZST <> 8
	AND (MY_MCH_NO, CHANNEL_NO) IN (SELECT MCH_NO, CHANNEL_NO FROM IMP_MCHT_BLACKLIST WHERE BLACK_TP = 'C' AND RECORD_ST = 1);
 																															
COMMIT;
SET O_ERRMSG = '0';

END;
